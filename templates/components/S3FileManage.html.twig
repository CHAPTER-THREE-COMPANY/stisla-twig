<twig:C3:Vue2>
    <div class="p-3">
        <div id="app_vue" class="section">
            {% if fileUploadFlag is same as "true" or fileUploadFlag is same as true %}
                <twig:C3:Fileuploader form="{{ form }}" savePath:attr:v-model="selectFile" />
            {% endif %}

            <div class="section-body">
                <div class="card">
                    <v-app class="p-3">
                        <v-card>
                            <v-sheet class="pa-4 primary lighten-2">
                                <v-text-field
                                        v-model="search"
                                        label="ここに資料名の一部を入力すると検索できます。"
                                        dark
                                        flat
                                        solo-inverted
                                        hide-details
                                        clearable
                                        clear-icon="mdi-close-circle-outline"
                                ></v-text-field>
                            </v-sheet>
                            <v-card-text>
                                <v-treeview
                                        v-model="tree"
                                        item-key="name"
                                        open-all
                                        open-on-click
                                        {% if fileUploadFlag is same as "true" or fileUploadFlag is same as true %}
                                        selectable
                                        selection-type="independent"
                                        return-object
                                        {% endif %}
                                        :items="items"
                                        :search="search"
                                >
                                    <template v-slot:label="{ item, open }">
                                        <v-icon
                                                v-if="item.children"
                                                v-text="open ? 'mdi-folder-open' : 'mdi-folder'"
                                        >
                                        </v-icon>
                                        <v-icon
                                                v-else
                                                v-text="`${files[item.file]}`">
                                        </v-icon>

                                        <a v-bind:href="item.url" v-if="!item.children"><span v-text="item.name"></span></a>
                                        <span v-else v-text="item.name"></span>
                                    </template>
                                </v-treeview>
                            </v-card-text>
                        </v-card>
                    </v-app>
                </div>
            </div>
        </div>
        {#    <a class="btn btn-primary" href="{{ path('homepage') }}">トップページへ戻る</a>#}
    </div>

    <twig:block name="script">
        <script>
            var app_vue = new Vue({
                el: '#app_vue',
                delimiter: ['{$', '}}'],
                vuetify: new Vuetify(),
                data: () => ({
                    items: [],
                    tree: [],
                    search: null,
                    files: {
                        html: 'mdi-language-html5',
                        js: 'mdi-nodejs',
                        json: 'mdi-code-json',
                        md: 'mdi-language-markdown',
                        pdf: 'mdi-file-pdf-outline',
                        mp3: 'mdi-music',
                        mp4: 'mdi-video-outline',
                        m4v: 'mdi-video-outline',
                        png: 'mdi-file-image',
                        jpg: 'mdi-file-image',
                        webp: 'mdi-file-image',
                        txt: 'mdi-file-document-outline',
                        xls: 'mdi-file-excel',
                        svg: 'mdi-file-outline'
                    },
                }),
                mounted: function ()  {
                    document.getElementById("app_vue").style.cursor = 'wait'
                    document.querySelector(".section-body > .card").style.opacity = '20%'
                    const self = this;
                    axios
                        .get("{{ getDataUrl }}")
                        .then(function (res) {

                            self.items = res.data;
                            document.getElementById("app_vue").style.cursor = 'default'
                            document.querySelector(".section-body > .card").style.opacity = '100%'
                        });
                },
                computed: {//computed:何か動きがあった場合、計算された値を返す？
                    validation: function () {//計算が必要な処理の紐付け？
                        return (this.selectFile);//selectFileプロパティを計算して返す
                    },
                    selectFile: function () {
                        //最終選択値を取得してフォルダ名に加工して返す
                        let list = this.tree;
                        // let ret = 'files/';//初期値にfilesセット
                        let ret = '';//初期値にfilesセット
                        if (list.length > 0) {
                            if (list[list.length - 1]['url']){
                                ret = list[list.length - 1]['url'].substring(list[list.length - 1]['url'].indexOf('/media/aws/s3/download?filename=')+32);
                            }else{
                                ret = list[list.length - 1]['name'];
                            }
                        }
                        let pathinfo = ret.split('/');
                        let filename = pathinfo.pop();
                        if (filename.indexOf('.') > 0 ) {
                            ret = ret.replace(filename, '');
                        }
                        return ret;
                    },
                }
            });
        </script>
    </twig:block>
</twig:C3:Vue2>